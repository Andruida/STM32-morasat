ARM GAS  /tmp/cchkJNIb.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"stm32f0xx_hal_crc_ex.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c"
  18              		.section	.text.HAL_CRCEx_Input_Data_Reverse,"ax",%progbits
  19              		.align	1
  20              		.global	HAL_CRCEx_Input_Data_Reverse
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	HAL_CRCEx_Input_Data_Reverse:
  26              	.LVL0:
  27              	.LFB40:
   1:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** /**
   2:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   ******************************************************************************
   3:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @file    stm32f0xx_hal_crc_ex.c
   4:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @author  MCD Application Team
   5:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @brief   Extended CRC HAL module driver.
   6:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *          This file provides firmware functions to manage the extended
   7:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *          functionalities of the CRC peripheral.
   8:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *
   9:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   ******************************************************************************
  10:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @attention
  11:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *
  12:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * Copyright (c) 2016 STMicroelectronics.
  13:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * All rights reserved.
  14:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *
  15:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * This software is licensed under terms that can be found in the LICENSE file
  16:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * in the root directory of this software component.
  17:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  18:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *
  19:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   ******************************************************************************
  20:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   @verbatim
  21:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** ================================================================================
  22:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****             ##### How to use this driver #####
  23:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** ================================================================================
  24:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****     [..]
  25:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****          (+) Set user-defined generating polynomial through HAL_CRCEx_Polynomial_Set()
  26:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****          (+) Configure Input or Output data inversion
  27:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
  28:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   @endverbatim
  29:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   ******************************************************************************
  30:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   */
  31:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
ARM GAS  /tmp/cchkJNIb.s 			page 2


  32:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** /* Includes ------------------------------------------------------------------*/
  33:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** #include "stm32f0xx_hal.h"
  34:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
  35:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** /** @addtogroup STM32F0xx_HAL_Driver
  36:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @{
  37:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   */
  38:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
  39:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** /** @defgroup CRCEx CRCEx
  40:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @brief CRC Extended HAL module driver
  41:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @{
  42:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   */
  43:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
  44:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** #ifdef HAL_CRC_MODULE_ENABLED
  45:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
  46:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** /* Private typedef -----------------------------------------------------------*/
  47:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** /* Private define ------------------------------------------------------------*/
  48:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** /* Private macro -------------------------------------------------------------*/
  49:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** /* Private variables ---------------------------------------------------------*/
  50:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** /* Private function prototypes -----------------------------------------------*/
  51:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** /* Exported functions --------------------------------------------------------*/
  52:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
  53:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** /** @defgroup CRCEx_Exported_Functions CRC Extended Exported Functions
  54:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @{
  55:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   */
  56:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
  57:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** /** @defgroup CRCEx_Exported_Functions_Group1 Extended Initialization/de-initialization functions
  58:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @brief    Extended Initialization and Configuration functions.
  59:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *
  60:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** @verbatim
  61:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****  ===============================================================================
  62:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****             ##### Extended configuration functions #####
  63:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****  ===============================================================================
  64:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****     [..]  This section provides functions allowing to:
  65:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****       (+) Configure the generating polynomial
  66:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****       (+) Configure the input data inversion
  67:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****       (+) Configure the output data inversion
  68:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
  69:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** @endverbatim
  70:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @{
  71:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   */
  72:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
  73:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
  74:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** #if defined(CRC_POL_POL)
  75:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** /**
  76:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @brief  Initialize the CRC polynomial if different from default one.
  77:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @param  hcrc CRC handle
  78:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @param  Pol CRC generating polynomial (7, 8, 16 or 32-bit long).
  79:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *         This parameter is written in normal representation, e.g.
  80:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *         @arg for a polynomial of degree 7, X^7 + X^6 + X^5 + X^2 + 1 is written 0x65
  81:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *         @arg for a polynomial of degree 16, X^16 + X^12 + X^5 + 1 is written 0x1021
  82:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @param  PolyLength CRC polynomial length.
  83:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *         This parameter can be one of the following values:
  84:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *          @arg @ref CRC_POLYLENGTH_7B  7-bit long CRC (generating polynomial of degree 7)
  85:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *          @arg @ref CRC_POLYLENGTH_8B  8-bit long CRC (generating polynomial of degree 8)
  86:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *          @arg @ref CRC_POLYLENGTH_16B 16-bit long CRC (generating polynomial of degree 16)
  87:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *          @arg @ref CRC_POLYLENGTH_32B 32-bit long CRC (generating polynomial of degree 32)
  88:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @retval HAL status
ARM GAS  /tmp/cchkJNIb.s 			page 3


  89:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   */
  90:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** HAL_StatusTypeDef HAL_CRCEx_Polynomial_Set(CRC_HandleTypeDef *hcrc, uint32_t Pol, uint32_t PolyLeng
  91:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** {
  92:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
  93:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   uint32_t msb = 31U; /* polynomial degree is 32 at most, so msb is initialized to max value */
  94:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
  95:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   /* Check the parameters */
  96:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   assert_param(IS_CRC_POL_LENGTH(PolyLength));
  97:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
  98:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   /* Ensure that the generating polynomial is odd */
  99:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   if ((Pol & (uint32_t)(0x1U)) ==  0U)
 100:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   {
 101:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****     status =  HAL_ERROR;
 102:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   }
 103:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   else
 104:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   {
 105:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****     /* check polynomial definition vs polynomial size:
 106:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****      * polynomial length must be aligned with polynomial
 107:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****      * definition. HAL_ERROR is reported if Pol degree is
 108:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****      * larger than that indicated by PolyLength.
 109:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****      * Look for MSB position: msb will contain the degree of
 110:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****      *  the second to the largest polynomial member. E.g., for
 111:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****      *  X^7 + X^6 + X^5 + X^2 + 1, msb = 6. */
 112:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****     while ((msb-- > 0U) && ((Pol & ((uint32_t)(0x1U) << (msb & 0x1FU))) == 0U))
 113:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****     {
 114:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****     }
 115:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
 116:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****     switch (PolyLength)
 117:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****     {
 118:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
 119:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****       case CRC_POLYLENGTH_7B:
 120:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         if (msb >= HAL_CRC_LENGTH_7B)
 121:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         {
 122:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****           status =   HAL_ERROR;
 123:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         }
 124:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         break;
 125:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****       case CRC_POLYLENGTH_8B:
 126:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         if (msb >= HAL_CRC_LENGTH_8B)
 127:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         {
 128:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****           status =   HAL_ERROR;
 129:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         }
 130:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         break;
 131:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****       case CRC_POLYLENGTH_16B:
 132:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         if (msb >= HAL_CRC_LENGTH_16B)
 133:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         {
 134:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****           status =   HAL_ERROR;
 135:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         }
 136:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         break;
 137:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
 138:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****       case CRC_POLYLENGTH_32B:
 139:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         /* no polynomial definition vs. polynomial length issue possible */
 140:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         break;
 141:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****       default:
 142:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         status =  HAL_ERROR;
 143:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****         break;
 144:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****     }
 145:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   }
ARM GAS  /tmp/cchkJNIb.s 			page 4


 146:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   if (status == HAL_OK)
 147:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   {
 148:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****     /* set generating polynomial */
 149:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****     WRITE_REG(hcrc->Instance->POL, Pol);
 150:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
 151:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****     /* set generating polynomial size */
 152:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****     MODIFY_REG(hcrc->Instance->CR, CRC_CR_POLYSIZE, PolyLength);
 153:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   }
 154:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   /* Return function status */
 155:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   return status;
 156:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** }
 157:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** #endif /* CRC_POL_POL */
 158:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
 159:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** /**
 160:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @brief  Set the Reverse Input data mode.
 161:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @param  hcrc CRC handle
 162:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @param  InputReverseMode Input Data inversion mode.
 163:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *         This parameter can be one of the following values:
 164:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *          @arg @ref CRC_INPUTDATA_INVERSION_NONE     no change in bit order (default value)
 165:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *          @arg @ref CRC_INPUTDATA_INVERSION_BYTE     Byte-wise bit reversal
 166:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *          @arg @ref CRC_INPUTDATA_INVERSION_HALFWORD HalfWord-wise bit reversal
 167:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *          @arg @ref CRC_INPUTDATA_INVERSION_WORD     Word-wise bit reversal
 168:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @retval HAL status
 169:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   */
 170:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** HAL_StatusTypeDef HAL_CRCEx_Input_Data_Reverse(CRC_HandleTypeDef *hcrc, uint32_t InputReverseMode)
 171:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** {
  28              		.loc 1 171 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 171 1 is_stmt 0 view .LVU1
  33 0000 10B5     		push	{r4, lr}
  34              		.cfi_def_cfa_offset 8
  35              		.cfi_offset 4, -8
  36              		.cfi_offset 14, -4
 172:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   /* Check the parameters */
 173:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   assert_param(IS_CRC_INPUTDATA_INVERSION_MODE(InputReverseMode));
  37              		.loc 1 173 3 is_stmt 1 view .LVU2
 174:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
 175:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   /* Change CRC peripheral state */
 176:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   hcrc->State = HAL_CRC_STATE_BUSY;
  38              		.loc 1 176 3 view .LVU3
  39              		.loc 1 176 15 is_stmt 0 view .LVU4
  40 0002 0223     		movs	r3, #2
  41 0004 4375     		strb	r3, [r0, #21]
 177:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
 178:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   /* set input data inversion mode */
 179:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_IN, InputReverseMode);
  42              		.loc 1 179 3 is_stmt 1 view .LVU5
  43 0006 0268     		ldr	r2, [r0]
  44 0008 9368     		ldr	r3, [r2, #8]
  45 000a 6024     		movs	r4, #96
  46 000c A343     		bics	r3, r4
  47 000e 0B43     		orrs	r3, r1
  48 0010 9360     		str	r3, [r2, #8]
 180:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   /* Change CRC peripheral state */
 181:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   hcrc->State = HAL_CRC_STATE_READY;
ARM GAS  /tmp/cchkJNIb.s 			page 5


  49              		.loc 1 181 3 view .LVU6
  50              		.loc 1 181 15 is_stmt 0 view .LVU7
  51 0012 0123     		movs	r3, #1
  52 0014 4375     		strb	r3, [r0, #21]
 182:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
 183:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   /* Return function status */
 184:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   return HAL_OK;
  53              		.loc 1 184 3 is_stmt 1 view .LVU8
 185:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** }
  54              		.loc 1 185 1 is_stmt 0 view .LVU9
  55 0016 0020     		movs	r0, #0
  56              	.LVL1:
  57              		.loc 1 185 1 view .LVU10
  58              		@ sp needed
  59 0018 10BD     		pop	{r4, pc}
  60              		.cfi_endproc
  61              	.LFE40:
  63              		.section	.text.HAL_CRCEx_Output_Data_Reverse,"ax",%progbits
  64              		.align	1
  65              		.global	HAL_CRCEx_Output_Data_Reverse
  66              		.syntax unified
  67              		.code	16
  68              		.thumb_func
  70              	HAL_CRCEx_Output_Data_Reverse:
  71              	.LVL2:
  72              	.LFB41:
 186:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
 187:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** /**
 188:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @brief  Set the Reverse Output data mode.
 189:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @param  hcrc CRC handle
 190:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @param  OutputReverseMode Output Data inversion mode.
 191:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *         This parameter can be one of the following values:
 192:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *          @arg @ref CRC_OUTPUTDATA_INVERSION_DISABLE no CRC inversion (default value)
 193:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   *          @arg @ref CRC_OUTPUTDATA_INVERSION_ENABLE  bit-level inversion (e.g. for a 8-bit CRC: 
 194:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   * @retval HAL status
 195:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   */
 196:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** HAL_StatusTypeDef HAL_CRCEx_Output_Data_Reverse(CRC_HandleTypeDef *hcrc, uint32_t OutputReverseMode
 197:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** {
  73              		.loc 1 197 1 is_stmt 1 view -0
  74              		.cfi_startproc
  75              		@ args = 0, pretend = 0, frame = 0
  76              		@ frame_needed = 0, uses_anonymous_args = 0
  77              		.loc 1 197 1 is_stmt 0 view .LVU12
  78 0000 10B5     		push	{r4, lr}
  79              		.cfi_def_cfa_offset 8
  80              		.cfi_offset 4, -8
  81              		.cfi_offset 14, -4
 198:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   /* Check the parameters */
 199:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   assert_param(IS_CRC_OUTPUTDATA_INVERSION_MODE(OutputReverseMode));
  82              		.loc 1 199 3 is_stmt 1 view .LVU13
 200:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
 201:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   /* Change CRC peripheral state */
 202:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   hcrc->State = HAL_CRC_STATE_BUSY;
  83              		.loc 1 202 3 view .LVU14
  84              		.loc 1 202 15 is_stmt 0 view .LVU15
  85 0002 0223     		movs	r3, #2
  86 0004 4375     		strb	r3, [r0, #21]
ARM GAS  /tmp/cchkJNIb.s 			page 6


 203:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
 204:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   /* set output data inversion mode */
 205:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   MODIFY_REG(hcrc->Instance->CR, CRC_CR_REV_OUT, OutputReverseMode);
  87              		.loc 1 205 3 is_stmt 1 view .LVU16
  88 0006 0268     		ldr	r2, [r0]
  89 0008 9368     		ldr	r3, [r2, #8]
  90 000a 8024     		movs	r4, #128
  91 000c A343     		bics	r3, r4
  92 000e 0B43     		orrs	r3, r1
  93 0010 9360     		str	r3, [r2, #8]
 206:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
 207:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   /* Change CRC peripheral state */
 208:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   hcrc->State = HAL_CRC_STATE_READY;
  94              		.loc 1 208 3 view .LVU17
  95              		.loc 1 208 15 is_stmt 0 view .LVU18
  96 0012 0123     		movs	r3, #1
  97 0014 4375     		strb	r3, [r0, #21]
 209:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** 
 210:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   /* Return function status */
 211:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c ****   return HAL_OK;
  98              		.loc 1 211 3 is_stmt 1 view .LVU19
 212:Drivers/STM32F0xx_HAL_Driver/Src/stm32f0xx_hal_crc_ex.c **** }
  99              		.loc 1 212 1 is_stmt 0 view .LVU20
 100 0016 0020     		movs	r0, #0
 101              	.LVL3:
 102              		.loc 1 212 1 view .LVU21
 103              		@ sp needed
 104 0018 10BD     		pop	{r4, pc}
 105              		.cfi_endproc
 106              	.LFE41:
 108              		.text
 109              	.Letext0:
 110              		.file 2 "/home/andruida/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 111              		.file 3 "/home/andruida/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 112              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 113              		.file 5 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 114              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_crc.h"
ARM GAS  /tmp/cchkJNIb.s 			page 7


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f0xx_hal_crc_ex.c
     /tmp/cchkJNIb.s:19     .text.HAL_CRCEx_Input_Data_Reverse:00000000 $t
     /tmp/cchkJNIb.s:25     .text.HAL_CRCEx_Input_Data_Reverse:00000000 HAL_CRCEx_Input_Data_Reverse
     /tmp/cchkJNIb.s:64     .text.HAL_CRCEx_Output_Data_Reverse:00000000 $t
     /tmp/cchkJNIb.s:70     .text.HAL_CRCEx_Output_Data_Reverse:00000000 HAL_CRCEx_Output_Data_Reverse

NO UNDEFINED SYMBOLS
