ARM GAS  /tmp/ccNtVhtu.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB48:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2024 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <string.h>
  25:Core/Src/main.c **** #include <stdlib.h>
  26:Core/Src/main.c **** #include "rf69.h"
  27:Core/Src/main.c **** /* USER CODE END Includes */
  28:Core/Src/main.c **** 
  29:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  30:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  31:Core/Src/main.c **** 
  32:Core/Src/main.c **** /* USER CODE END PTD */
  33:Core/Src/main.c **** 
ARM GAS  /tmp/ccNtVhtu.s 			page 2


  34:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  35:Core/Src/main.c **** /* USER CODE BEGIN PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* USER CODE END PD */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  40:Core/Src/main.c **** /* USER CODE BEGIN PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* USER CODE END PM */
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  45:Core/Src/main.c **** CRC_HandleTypeDef hcrc;
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** SPI_HandleTypeDef hspi1;
  48:Core/Src/main.c **** 
  49:Core/Src/main.c **** TIM_HandleTypeDef htim14;
  50:Core/Src/main.c **** 
  51:Core/Src/main.c **** UART_HandleTypeDef huart1;
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE BEGIN PV */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* USER CODE END PV */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  58:Core/Src/main.c **** void SystemClock_Config(void);
  59:Core/Src/main.c **** static void MX_GPIO_Init(void);
  60:Core/Src/main.c **** static void MX_SPI1_Init(void);
  61:Core/Src/main.c **** static void MX_USART1_UART_Init(void);
  62:Core/Src/main.c **** static void MX_CRC_Init(void);
  63:Core/Src/main.c **** static void MX_TIM14_Init(void);
  64:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** /* USER CODE END PFP */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  69:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  70:Core/Src/main.c **** 
  71:Core/Src/main.c **** void delay_us (uint16_t us)
  72:Core/Src/main.c **** {
  73:Core/Src/main.c **** 	__HAL_TIM_SET_COUNTER(&htim14,0);  // set the counter value a 0
  74:Core/Src/main.c **** 	while (
  75:Core/Src/main.c ****     __HAL_TIM_GET_COUNTER(&htim14) < us
  76:Core/Src/main.c ****     );  // wait for the counter to reach the us input in the parameter
  77:Core/Src/main.c **** }
  78:Core/Src/main.c **** 
  79:Core/Src/main.c **** void HAL_Delay(uint32_t Delay)
  80:Core/Src/main.c **** {
  81:Core/Src/main.c ****   for (uint32_t i = 0; i < Delay; i++)
  82:Core/Src/main.c ****   {
  83:Core/Src/main.c ****     delay_us(1000);
  84:Core/Src/main.c ****   }
  85:Core/Src/main.c **** }
  86:Core/Src/main.c **** 
  87:Core/Src/main.c **** 
  88:Core/Src/main.c **** 
  89:Core/Src/main.c **** /* USER CODE END 0 */
  90:Core/Src/main.c **** 
ARM GAS  /tmp/ccNtVhtu.s 			page 3


  91:Core/Src/main.c **** /**
  92:Core/Src/main.c ****   * @brief  The application entry point.
  93:Core/Src/main.c ****   * @retval int
  94:Core/Src/main.c ****   */
  95:Core/Src/main.c **** int main(void)
  96:Core/Src/main.c **** {
  97:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   /* USER CODE END 1 */
 100:Core/Src/main.c **** 
 101:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 104:Core/Src/main.c ****   HAL_Init();
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* USER CODE END Init */
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Configure the system clock */
 111:Core/Src/main.c ****   SystemClock_Config();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END SysInit */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Initialize all configured peripherals */
 118:Core/Src/main.c ****   MX_GPIO_Init();
 119:Core/Src/main.c ****   MX_SPI1_Init();
 120:Core/Src/main.c ****   MX_USART1_UART_Init();
 121:Core/Src/main.c ****   MX_CRC_Init();
 122:Core/Src/main.c ****   MX_TIM14_Init();
 123:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 124:Core/Src/main.c **** 
 125:Core/Src/main.c ****   HAL_TIM_Base_Start(&htim14);
 126:Core/Src/main.c **** 
 127:Core/Src/main.c ****   int packetnum = 0;
 128:Core/Src/main.c ****   if (!init(&hspi1)) Error_Handler();
 129:Core/Src/main.c ****   if (!setFrequency(868.0f)) Error_Handler();
 130:Core/Src/main.c ****   setModemConfig(GFSK_Rb2_4Fd4_8);
 131:Core/Src/main.c ****   setPreambleLength(4);
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /* USER CODE END 2 */
 134:Core/Src/main.c **** 
 135:Core/Src/main.c ****   /* Infinite loop */
 136:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 137:Core/Src/main.c ****   while (1)
 138:Core/Src/main.c ****   {
 139:Core/Src/main.c ****     /* USER CODE END WHILE */
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 142:Core/Src/main.c ****     char radiopacket[64] = "Hello World #";
 143:Core/Src/main.c ****     //sprintf(radiopacket, "Hello World #%d", packetnum++);
 144:Core/Src/main.c ****     char packetnumstr[10];
 145:Core/Src/main.c ****     itoa(packetnum++, packetnumstr, 10);
 146:Core/Src/main.c ****     strcat(radiopacket, packetnumstr);
 147:Core/Src/main.c ****   
ARM GAS  /tmp/ccNtVhtu.s 			page 4


 148:Core/Src/main.c **** 		// Send a message!
 149:Core/Src/main.c **** 		// for (int i=0; i < 10; i++)
 150:Core/Src/main.c **** 		send((uint8_t *)radiopacket, strlen(radiopacket));
 151:Core/Src/main.c **** 		waitPacketSent();
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****     HAL_Delay(1000);
 154:Core/Src/main.c **** 
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c ****   /* USER CODE END 3 */
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief System Clock Configuration
 161:Core/Src/main.c ****   * @retval None
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c **** void SystemClock_Config(void)
 164:Core/Src/main.c **** {
 165:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 166:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 167:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 170:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 171:Core/Src/main.c ****   */
 172:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 174:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 175:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 176:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 177:Core/Src/main.c ****   {
 178:Core/Src/main.c ****     Error_Handler();
 179:Core/Src/main.c ****   }
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 184:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 185:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 186:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 187:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 190:Core/Src/main.c ****   {
 191:Core/Src/main.c ****     Error_Handler();
 192:Core/Src/main.c ****   }
 193:Core/Src/main.c ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1;
 194:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 195:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 196:Core/Src/main.c ****   {
 197:Core/Src/main.c ****     Error_Handler();
 198:Core/Src/main.c ****   }
 199:Core/Src/main.c **** }
 200:Core/Src/main.c **** 
 201:Core/Src/main.c **** /**
 202:Core/Src/main.c ****   * @brief CRC Initialization Function
 203:Core/Src/main.c ****   * @param None
 204:Core/Src/main.c ****   * @retval None
ARM GAS  /tmp/ccNtVhtu.s 			page 5


 205:Core/Src/main.c ****   */
 206:Core/Src/main.c **** static void MX_CRC_Init(void)
 207:Core/Src/main.c **** {
 208:Core/Src/main.c **** 
 209:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 0 */
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   /* USER CODE END CRC_Init 0 */
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 1 */
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* USER CODE END CRC_Init 1 */
 216:Core/Src/main.c ****   hcrc.Instance = CRC;
 217:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 218:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 219:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 220:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 221:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 222:Core/Src/main.c ****   {
 223:Core/Src/main.c ****     Error_Handler();
 224:Core/Src/main.c ****   }
 225:Core/Src/main.c ****   /* USER CODE BEGIN CRC_Init 2 */
 226:Core/Src/main.c **** 
 227:Core/Src/main.c ****   /* USER CODE END CRC_Init 2 */
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** }
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** /**
 232:Core/Src/main.c ****   * @brief SPI1 Initialization Function
 233:Core/Src/main.c ****   * @param None
 234:Core/Src/main.c ****   * @retval None
 235:Core/Src/main.c ****   */
 236:Core/Src/main.c **** static void MX_SPI1_Init(void)
 237:Core/Src/main.c **** {
 238:Core/Src/main.c **** 
 239:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 0 */
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   /* USER CODE END SPI1_Init 0 */
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 1 */
 244:Core/Src/main.c **** 
 245:Core/Src/main.c ****   /* USER CODE END SPI1_Init 1 */
 246:Core/Src/main.c ****   /* SPI1 parameter configuration*/
 247:Core/Src/main.c ****   hspi1.Instance = SPI1;
 248:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 249:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 250:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 251:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 252:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 253:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 254:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 255:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 256:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 257:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 258:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 259:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 260:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 261:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
ARM GAS  /tmp/ccNtVhtu.s 			page 6


 262:Core/Src/main.c ****   {
 263:Core/Src/main.c ****     Error_Handler();
 264:Core/Src/main.c ****   }
 265:Core/Src/main.c ****   /* USER CODE BEGIN SPI1_Init 2 */
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****   /* USER CODE END SPI1_Init 2 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** }
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** /**
 272:Core/Src/main.c ****   * @brief TIM14 Initialization Function
 273:Core/Src/main.c ****   * @param None
 274:Core/Src/main.c ****   * @retval None
 275:Core/Src/main.c ****   */
 276:Core/Src/main.c **** static void MX_TIM14_Init(void)
 277:Core/Src/main.c **** {
 278:Core/Src/main.c **** 
 279:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 0 */
 280:Core/Src/main.c **** 
 281:Core/Src/main.c ****   /* USER CODE END TIM14_Init 0 */
 282:Core/Src/main.c **** 
 283:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 1 */
 284:Core/Src/main.c **** 
 285:Core/Src/main.c ****   /* USER CODE END TIM14_Init 1 */
 286:Core/Src/main.c ****   htim14.Instance = TIM14;
 287:Core/Src/main.c ****   htim14.Init.Prescaler = 8-1;
 288:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 289:Core/Src/main.c ****   htim14.Init.Period = 65535;
 290:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 291:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 292:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 293:Core/Src/main.c ****   {
 294:Core/Src/main.c ****     Error_Handler();
 295:Core/Src/main.c ****   }
 296:Core/Src/main.c ****   /* USER CODE BEGIN TIM14_Init 2 */
 297:Core/Src/main.c **** 
 298:Core/Src/main.c ****   /* USER CODE END TIM14_Init 2 */
 299:Core/Src/main.c **** 
 300:Core/Src/main.c **** }
 301:Core/Src/main.c **** 
 302:Core/Src/main.c **** /**
 303:Core/Src/main.c ****   * @brief USART1 Initialization Function
 304:Core/Src/main.c ****   * @param None
 305:Core/Src/main.c ****   * @retval None
 306:Core/Src/main.c ****   */
 307:Core/Src/main.c **** static void MX_USART1_UART_Init(void)
 308:Core/Src/main.c **** {
 309:Core/Src/main.c **** 
 310:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 0 */
 311:Core/Src/main.c **** 
 312:Core/Src/main.c ****   /* USER CODE END USART1_Init 0 */
 313:Core/Src/main.c **** 
 314:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 1 */
 315:Core/Src/main.c **** 
 316:Core/Src/main.c ****   /* USER CODE END USART1_Init 1 */
 317:Core/Src/main.c ****   huart1.Instance = USART1;
 318:Core/Src/main.c ****   huart1.Init.BaudRate = 38400;
ARM GAS  /tmp/ccNtVhtu.s 			page 7


 319:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 320:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 321:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 322:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 323:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 324:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 325:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 326:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 327:Core/Src/main.c ****   if (HAL_HalfDuplex_Init(&huart1) != HAL_OK)
 328:Core/Src/main.c ****   {
 329:Core/Src/main.c ****     Error_Handler();
 330:Core/Src/main.c ****   }
 331:Core/Src/main.c ****   /* USER CODE BEGIN USART1_Init 2 */
 332:Core/Src/main.c **** 
 333:Core/Src/main.c ****   /* USER CODE END USART1_Init 2 */
 334:Core/Src/main.c **** 
 335:Core/Src/main.c **** }
 336:Core/Src/main.c **** 
 337:Core/Src/main.c **** /**
 338:Core/Src/main.c ****   * @brief GPIO Initialization Function
 339:Core/Src/main.c ****   * @param None
 340:Core/Src/main.c ****   * @retval None
 341:Core/Src/main.c ****   */
 342:Core/Src/main.c **** static void MX_GPIO_Init(void)
 343:Core/Src/main.c **** {
  26              		.loc 1 343 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 24
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              		.cfi_def_cfa_offset 8
  32              		.cfi_offset 4, -8
  33              		.cfi_offset 14, -4
  34 0002 86B0     		sub	sp, sp, #24
  35              		.cfi_def_cfa_offset 32
 344:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  36              		.loc 1 344 3 view .LVU1
  37              		.loc 1 344 20 is_stmt 0 view .LVU2
  38 0004 1422     		movs	r2, #20
  39 0006 0021     		movs	r1, #0
  40 0008 01A8     		add	r0, sp, #4
  41 000a FFF7FEFF 		bl	memset
  42              	.LVL0:
 345:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 346:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 347:Core/Src/main.c **** 
 348:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 349:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  43              		.loc 1 349 3 is_stmt 1 view .LVU3
  44              	.LBB4:
  45              		.loc 1 349 3 view .LVU4
  46              		.loc 1 349 3 view .LVU5
  47 000e 0F4B     		ldr	r3, .L2
  48 0010 5A69     		ldr	r2, [r3, #20]
  49 0012 8021     		movs	r1, #128
  50 0014 8902     		lsls	r1, r1, #10
  51 0016 0A43     		orrs	r2, r1
ARM GAS  /tmp/ccNtVhtu.s 			page 8


  52 0018 5A61     		str	r2, [r3, #20]
  53              		.loc 1 349 3 view .LVU6
  54 001a 5B69     		ldr	r3, [r3, #20]
  55 001c 0B40     		ands	r3, r1
  56 001e 0093     		str	r3, [sp]
  57              		.loc 1 349 3 view .LVU7
  58 0020 009B     		ldr	r3, [sp]
  59              	.LBE4:
  60              		.loc 1 349 3 view .LVU8
 350:Core/Src/main.c **** 
 351:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 352:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, RF69_RESET_Pin|RF69_NSS_Pin, GPIO_PIN_RESET);
  61              		.loc 1 352 3 view .LVU9
  62 0022 9024     		movs	r4, #144
  63 0024 E405     		lsls	r4, r4, #23
  64 0026 0022     		movs	r2, #0
  65 0028 1821     		movs	r1, #24
  66 002a 2000     		movs	r0, r4
  67 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
  68              	.LVL1:
 353:Core/Src/main.c **** 
 354:Core/Src/main.c ****   /*Configure GPIO pins : RF69_RESET_Pin RF69_NSS_Pin */
 355:Core/Src/main.c ****   GPIO_InitStruct.Pin = RF69_RESET_Pin|RF69_NSS_Pin;
  69              		.loc 1 355 3 view .LVU10
  70              		.loc 1 355 23 is_stmt 0 view .LVU11
  71 0030 1823     		movs	r3, #24
  72 0032 0193     		str	r3, [sp, #4]
 356:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  73              		.loc 1 356 3 is_stmt 1 view .LVU12
  74              		.loc 1 356 24 is_stmt 0 view .LVU13
  75 0034 173B     		subs	r3, r3, #23
  76 0036 0293     		str	r3, [sp, #8]
 357:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  77              		.loc 1 357 3 is_stmt 1 view .LVU14
  78              		.loc 1 357 24 is_stmt 0 view .LVU15
  79 0038 0023     		movs	r3, #0
  80 003a 0393     		str	r3, [sp, #12]
 358:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  81              		.loc 1 358 3 is_stmt 1 view .LVU16
  82              		.loc 1 358 25 is_stmt 0 view .LVU17
  83 003c 0493     		str	r3, [sp, #16]
 359:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
  84              		.loc 1 359 3 is_stmt 1 view .LVU18
  85 003e 01A9     		add	r1, sp, #4
  86 0040 2000     		movs	r0, r4
  87 0042 FFF7FEFF 		bl	HAL_GPIO_Init
  88              	.LVL2:
 360:Core/Src/main.c **** 
 361:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 362:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 363:Core/Src/main.c **** }
  89              		.loc 1 363 1 is_stmt 0 view .LVU19
  90 0046 06B0     		add	sp, sp, #24
  91              		@ sp needed
  92 0048 10BD     		pop	{r4, pc}
  93              	.L3:
  94 004a C046     		.align	2
ARM GAS  /tmp/ccNtVhtu.s 			page 9


  95              	.L2:
  96 004c 00100240 		.word	1073876992
  97              		.cfi_endproc
  98              	.LFE48:
 100              		.section	.text.delay_us,"ax",%progbits
 101              		.align	1
 102              		.global	delay_us
 103              		.syntax unified
 104              		.code	16
 105              		.thumb_func
 107              	delay_us:
 108              	.LVL3:
 109              	.LFB40:
  72:Core/Src/main.c **** 	__HAL_TIM_SET_COUNTER(&htim14,0);  // set the counter value a 0
 110              		.loc 1 72 1 is_stmt 1 view -0
 111              		.cfi_startproc
 112              		@ args = 0, pretend = 0, frame = 0
 113              		@ frame_needed = 0, uses_anonymous_args = 0
 114              		@ link register save eliminated.
  73:Core/Src/main.c **** 	while (
 115              		.loc 1 73 2 view .LVU21
 116 0000 034B     		ldr	r3, .L6
 117 0002 1A68     		ldr	r2, [r3]
 118 0004 0023     		movs	r3, #0
 119 0006 5362     		str	r3, [r2, #36]
  74:Core/Src/main.c ****     __HAL_TIM_GET_COUNTER(&htim14) < us
 120              		.loc 1 74 2 view .LVU22
 121              	.L5:
  75:Core/Src/main.c ****     );  // wait for the counter to reach the us input in the parameter
 122              		.loc 1 75 36 discriminator 1 view .LVU23
  75:Core/Src/main.c ****     );  // wait for the counter to reach the us input in the parameter
 123              		.loc 1 75 5 is_stmt 0 discriminator 1 view .LVU24
 124 0008 536A     		ldr	r3, [r2, #36]
  75:Core/Src/main.c ****     );  // wait for the counter to reach the us input in the parameter
 125              		.loc 1 75 36 discriminator 1 view .LVU25
 126 000a 8342     		cmp	r3, r0
 127 000c FCD3     		bcc	.L5
  77:Core/Src/main.c **** 
 128              		.loc 1 77 1 view .LVU26
 129              		@ sp needed
 130 000e 7047     		bx	lr
 131              	.L7:
 132              		.align	2
 133              	.L6:
 134 0010 00000000 		.word	htim14
 135              		.cfi_endproc
 136              	.LFE40:
 138              		.section	.text.HAL_Delay,"ax",%progbits
 139              		.align	1
 140              		.global	HAL_Delay
 141              		.syntax unified
 142              		.code	16
 143              		.thumb_func
 145              	HAL_Delay:
 146              	.LVL4:
 147              	.LFB41:
  80:Core/Src/main.c ****   for (uint32_t i = 0; i < Delay; i++)
ARM GAS  /tmp/ccNtVhtu.s 			page 10


 148              		.loc 1 80 1 is_stmt 1 view -0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
  80:Core/Src/main.c ****   for (uint32_t i = 0; i < Delay; i++)
 152              		.loc 1 80 1 is_stmt 0 view .LVU28
 153 0000 70B5     		push	{r4, r5, r6, lr}
 154              		.cfi_def_cfa_offset 16
 155              		.cfi_offset 4, -16
 156              		.cfi_offset 5, -12
 157              		.cfi_offset 6, -8
 158              		.cfi_offset 14, -4
 159 0002 0500     		movs	r5, r0
  81:Core/Src/main.c ****   {
 160              		.loc 1 81 3 is_stmt 1 view .LVU29
 161              	.LBB5:
  81:Core/Src/main.c ****   {
 162              		.loc 1 81 8 view .LVU30
 163              	.LVL5:
  81:Core/Src/main.c ****   {
 164              		.loc 1 81 17 is_stmt 0 view .LVU31
 165 0004 0024     		movs	r4, #0
  81:Core/Src/main.c ****   {
 166              		.loc 1 81 3 view .LVU32
 167 0006 04E0     		b	.L9
 168              	.LVL6:
 169              	.L10:
  83:Core/Src/main.c ****   }
 170              		.loc 1 83 5 is_stmt 1 view .LVU33
 171 0008 FA20     		movs	r0, #250
 172 000a 8000     		lsls	r0, r0, #2
 173 000c FFF7FEFF 		bl	delay_us
 174              	.LVL7:
  81:Core/Src/main.c ****   {
 175              		.loc 1 81 36 discriminator 3 view .LVU34
 176 0010 0134     		adds	r4, r4, #1
 177              	.LVL8:
 178              	.L9:
  81:Core/Src/main.c ****   {
 179              		.loc 1 81 26 discriminator 1 view .LVU35
 180 0012 AC42     		cmp	r4, r5
 181 0014 F8D3     		bcc	.L10
 182              	.LBE5:
  85:Core/Src/main.c **** 
 183              		.loc 1 85 1 is_stmt 0 view .LVU36
 184              		@ sp needed
 185              	.LVL9:
 186              	.LVL10:
  85:Core/Src/main.c **** 
 187              		.loc 1 85 1 view .LVU37
 188 0016 70BD     		pop	{r4, r5, r6, pc}
 189              		.cfi_endproc
 190              	.LFE41:
 192              		.section	.text.Error_Handler,"ax",%progbits
 193              		.align	1
 194              		.global	Error_Handler
 195              		.syntax unified
ARM GAS  /tmp/ccNtVhtu.s 			page 11


 196              		.code	16
 197              		.thumb_func
 199              	Error_Handler:
 200              	.LFB49:
 364:Core/Src/main.c **** 
 365:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 366:Core/Src/main.c **** 
 367:Core/Src/main.c **** /* USER CODE END 4 */
 368:Core/Src/main.c **** 
 369:Core/Src/main.c **** /**
 370:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 371:Core/Src/main.c ****   * @retval None
 372:Core/Src/main.c ****   */
 373:Core/Src/main.c **** void Error_Handler(void)
 374:Core/Src/main.c **** {
 201              		.loc 1 374 1 is_stmt 1 view -0
 202              		.cfi_startproc
 203              		@ Volatile: function does not return.
 204              		@ args = 0, pretend = 0, frame = 0
 205              		@ frame_needed = 0, uses_anonymous_args = 0
 206              		@ link register save eliminated.
 375:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 376:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 377:Core/Src/main.c ****   __disable_irq();
 207              		.loc 1 377 3 view .LVU39
 208              	.LBB6:
 209              	.LBI6:
 210              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
ARM GAS  /tmp/ccNtVhtu.s 			page 12


  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
ARM GAS  /tmp/ccNtVhtu.s 			page 13


  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 211              		.loc 2 140 27 view .LVU40
 212              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /tmp/ccNtVhtu.s 			page 14


 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 213              		.loc 2 142 3 view .LVU41
 214              		.syntax divided
 215              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 216 0000 72B6     		cpsid i
 217              	@ 0 "" 2
 218              		.thumb
 219              		.syntax unified
 220              	.L12:
 221              	.LBE7:
 222              	.LBE6:
 378:Core/Src/main.c ****   while (1)
 223              		.loc 1 378 3 view .LVU42
 379:Core/Src/main.c ****   {
 380:Core/Src/main.c ****     //reset the microcontroller
 381:Core/Src/main.c ****     //HAL_NVIC_SystemReset();
 382:Core/Src/main.c ****     __NOP();
 224              		.loc 1 382 5 discriminator 1 view .LVU43
 225              		.syntax divided
 226              	@ 382 "Core/Src/main.c" 1
 227 0002 C046     		nop
 228              	@ 0 "" 2
 378:Core/Src/main.c ****   while (1)
 229              		.loc 1 378 9 view .LVU44
 230              		.thumb
 231              		.syntax unified
 232 0004 FDE7     		b	.L12
 233              		.cfi_endproc
 234              	.LFE49:
 236              		.section	.text.MX_SPI1_Init,"ax",%progbits
 237              		.align	1
 238              		.syntax unified
 239              		.code	16
 240              		.thumb_func
 242              	MX_SPI1_Init:
 243              	.LFB45:
 237:Core/Src/main.c **** 
 244              		.loc 1 237 1 view -0
 245              		.cfi_startproc
 246              		@ args = 0, pretend = 0, frame = 0
 247              		@ frame_needed = 0, uses_anonymous_args = 0
 248 0000 10B5     		push	{r4, lr}
 249              		.cfi_def_cfa_offset 8
 250              		.cfi_offset 4, -8
 251              		.cfi_offset 14, -4
 247:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 252              		.loc 1 247 3 view .LVU46
 247:Core/Src/main.c ****   hspi1.Init.Mode = SPI_MODE_MASTER;
 253              		.loc 1 247 18 is_stmt 0 view .LVU47
 254 0002 1048     		ldr	r0, .L16
 255 0004 104B     		ldr	r3, .L16+4
 256 0006 0360     		str	r3, [r0]
 248:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 257              		.loc 1 248 3 is_stmt 1 view .LVU48
 248:Core/Src/main.c ****   hspi1.Init.Direction = SPI_DIRECTION_2LINES;
 258              		.loc 1 248 19 is_stmt 0 view .LVU49
 259 0008 8223     		movs	r3, #130
ARM GAS  /tmp/ccNtVhtu.s 			page 15


 260 000a 5B00     		lsls	r3, r3, #1
 261 000c 4360     		str	r3, [r0, #4]
 249:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 262              		.loc 1 249 3 is_stmt 1 view .LVU50
 249:Core/Src/main.c ****   hspi1.Init.DataSize = SPI_DATASIZE_8BIT;
 263              		.loc 1 249 24 is_stmt 0 view .LVU51
 264 000e 0023     		movs	r3, #0
 265 0010 8360     		str	r3, [r0, #8]
 250:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 266              		.loc 1 250 3 is_stmt 1 view .LVU52
 250:Core/Src/main.c ****   hspi1.Init.CLKPolarity = SPI_POLARITY_LOW;
 267              		.loc 1 250 23 is_stmt 0 view .LVU53
 268 0012 E022     		movs	r2, #224
 269 0014 D200     		lsls	r2, r2, #3
 270 0016 C260     		str	r2, [r0, #12]
 251:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 271              		.loc 1 251 3 is_stmt 1 view .LVU54
 251:Core/Src/main.c ****   hspi1.Init.CLKPhase = SPI_PHASE_1EDGE;
 272              		.loc 1 251 26 is_stmt 0 view .LVU55
 273 0018 0361     		str	r3, [r0, #16]
 252:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 274              		.loc 1 252 3 is_stmt 1 view .LVU56
 252:Core/Src/main.c ****   hspi1.Init.NSS = SPI_NSS_SOFT;
 275              		.loc 1 252 23 is_stmt 0 view .LVU57
 276 001a 4361     		str	r3, [r0, #20]
 253:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 277              		.loc 1 253 3 is_stmt 1 view .LVU58
 253:Core/Src/main.c ****   hspi1.Init.BaudRatePrescaler = SPI_BAUDRATEPRESCALER_2;
 278              		.loc 1 253 18 is_stmt 0 view .LVU59
 279 001c 8022     		movs	r2, #128
 280 001e 9200     		lsls	r2, r2, #2
 281 0020 8261     		str	r2, [r0, #24]
 254:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 282              		.loc 1 254 3 is_stmt 1 view .LVU60
 254:Core/Src/main.c ****   hspi1.Init.FirstBit = SPI_FIRSTBIT_MSB;
 283              		.loc 1 254 32 is_stmt 0 view .LVU61
 284 0022 C361     		str	r3, [r0, #28]
 255:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 285              		.loc 1 255 3 is_stmt 1 view .LVU62
 255:Core/Src/main.c ****   hspi1.Init.TIMode = SPI_TIMODE_DISABLE;
 286              		.loc 1 255 23 is_stmt 0 view .LVU63
 287 0024 0362     		str	r3, [r0, #32]
 256:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 288              		.loc 1 256 3 is_stmt 1 view .LVU64
 256:Core/Src/main.c ****   hspi1.Init.CRCCalculation = SPI_CRCCALCULATION_DISABLE;
 289              		.loc 1 256 21 is_stmt 0 view .LVU65
 290 0026 4362     		str	r3, [r0, #36]
 257:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 291              		.loc 1 257 3 is_stmt 1 view .LVU66
 257:Core/Src/main.c ****   hspi1.Init.CRCPolynomial = 7;
 292              		.loc 1 257 29 is_stmt 0 view .LVU67
 293 0028 8362     		str	r3, [r0, #40]
 258:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 294              		.loc 1 258 3 is_stmt 1 view .LVU68
 258:Core/Src/main.c ****   hspi1.Init.CRCLength = SPI_CRC_LENGTH_DATASIZE;
 295              		.loc 1 258 28 is_stmt 0 view .LVU69
 296 002a FA3A     		subs	r2, r2, #250
ARM GAS  /tmp/ccNtVhtu.s 			page 16


 297 002c FF3A     		subs	r2, r2, #255
 298 002e C262     		str	r2, [r0, #44]
 259:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 299              		.loc 1 259 3 is_stmt 1 view .LVU70
 259:Core/Src/main.c ****   hspi1.Init.NSSPMode = SPI_NSS_PULSE_ENABLE;
 300              		.loc 1 259 24 is_stmt 0 view .LVU71
 301 0030 0363     		str	r3, [r0, #48]
 260:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 302              		.loc 1 260 3 is_stmt 1 view .LVU72
 260:Core/Src/main.c ****   if (HAL_SPI_Init(&hspi1) != HAL_OK)
 303              		.loc 1 260 23 is_stmt 0 view .LVU73
 304 0032 0833     		adds	r3, r3, #8
 305 0034 4363     		str	r3, [r0, #52]
 261:Core/Src/main.c ****   {
 306              		.loc 1 261 3 is_stmt 1 view .LVU74
 261:Core/Src/main.c ****   {
 307              		.loc 1 261 7 is_stmt 0 view .LVU75
 308 0036 FFF7FEFF 		bl	HAL_SPI_Init
 309              	.LVL11:
 261:Core/Src/main.c ****   {
 310              		.loc 1 261 6 discriminator 1 view .LVU76
 311 003a 0028     		cmp	r0, #0
 312 003c 00D1     		bne	.L15
 269:Core/Src/main.c **** 
 313              		.loc 1 269 1 view .LVU77
 314              		@ sp needed
 315 003e 10BD     		pop	{r4, pc}
 316              	.L15:
 263:Core/Src/main.c ****   }
 317              		.loc 1 263 5 is_stmt 1 view .LVU78
 318 0040 FFF7FEFF 		bl	Error_Handler
 319              	.LVL12:
 320              	.L17:
 321              		.align	2
 322              	.L16:
 323 0044 00000000 		.word	hspi1
 324 0048 00300140 		.word	1073819648
 325              		.cfi_endproc
 326              	.LFE45:
 328              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 329              		.align	1
 330              		.syntax unified
 331              		.code	16
 332              		.thumb_func
 334              	MX_USART1_UART_Init:
 335              	.LFB47:
 308:Core/Src/main.c **** 
 336              		.loc 1 308 1 view -0
 337              		.cfi_startproc
 338              		@ args = 0, pretend = 0, frame = 0
 339              		@ frame_needed = 0, uses_anonymous_args = 0
 340 0000 10B5     		push	{r4, lr}
 341              		.cfi_def_cfa_offset 8
 342              		.cfi_offset 4, -8
 343              		.cfi_offset 14, -4
 317:Core/Src/main.c ****   huart1.Init.BaudRate = 38400;
 344              		.loc 1 317 3 view .LVU80
ARM GAS  /tmp/ccNtVhtu.s 			page 17


 317:Core/Src/main.c ****   huart1.Init.BaudRate = 38400;
 345              		.loc 1 317 19 is_stmt 0 view .LVU81
 346 0002 0B48     		ldr	r0, .L21
 347 0004 0B4B     		ldr	r3, .L21+4
 348 0006 0360     		str	r3, [r0]
 318:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 349              		.loc 1 318 3 is_stmt 1 view .LVU82
 318:Core/Src/main.c ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 350              		.loc 1 318 24 is_stmt 0 view .LVU83
 351 0008 9623     		movs	r3, #150
 352 000a 1B02     		lsls	r3, r3, #8
 353 000c 4360     		str	r3, [r0, #4]
 319:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 354              		.loc 1 319 3 is_stmt 1 view .LVU84
 319:Core/Src/main.c ****   huart1.Init.StopBits = UART_STOPBITS_1;
 355              		.loc 1 319 26 is_stmt 0 view .LVU85
 356 000e 0023     		movs	r3, #0
 357 0010 8360     		str	r3, [r0, #8]
 320:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 358              		.loc 1 320 3 is_stmt 1 view .LVU86
 320:Core/Src/main.c ****   huart1.Init.Parity = UART_PARITY_NONE;
 359              		.loc 1 320 24 is_stmt 0 view .LVU87
 360 0012 C360     		str	r3, [r0, #12]
 321:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 361              		.loc 1 321 3 is_stmt 1 view .LVU88
 321:Core/Src/main.c ****   huart1.Init.Mode = UART_MODE_TX_RX;
 362              		.loc 1 321 22 is_stmt 0 view .LVU89
 363 0014 0361     		str	r3, [r0, #16]
 322:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 364              		.loc 1 322 3 is_stmt 1 view .LVU90
 322:Core/Src/main.c ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 365              		.loc 1 322 20 is_stmt 0 view .LVU91
 366 0016 0C22     		movs	r2, #12
 367 0018 4261     		str	r2, [r0, #20]
 323:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 368              		.loc 1 323 3 is_stmt 1 view .LVU92
 323:Core/Src/main.c ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 369              		.loc 1 323 25 is_stmt 0 view .LVU93
 370 001a 8361     		str	r3, [r0, #24]
 324:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 371              		.loc 1 324 3 is_stmt 1 view .LVU94
 324:Core/Src/main.c ****   huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 372              		.loc 1 324 28 is_stmt 0 view .LVU95
 373 001c C361     		str	r3, [r0, #28]
 325:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 374              		.loc 1 325 3 is_stmt 1 view .LVU96
 325:Core/Src/main.c ****   huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 375              		.loc 1 325 30 is_stmt 0 view .LVU97
 376 001e 0362     		str	r3, [r0, #32]
 326:Core/Src/main.c ****   if (HAL_HalfDuplex_Init(&huart1) != HAL_OK)
 377              		.loc 1 326 3 is_stmt 1 view .LVU98
 326:Core/Src/main.c ****   if (HAL_HalfDuplex_Init(&huart1) != HAL_OK)
 378              		.loc 1 326 38 is_stmt 0 view .LVU99
 379 0020 4362     		str	r3, [r0, #36]
 327:Core/Src/main.c ****   {
 380              		.loc 1 327 3 is_stmt 1 view .LVU100
 327:Core/Src/main.c ****   {
ARM GAS  /tmp/ccNtVhtu.s 			page 18


 381              		.loc 1 327 7 is_stmt 0 view .LVU101
 382 0022 FFF7FEFF 		bl	HAL_HalfDuplex_Init
 383              	.LVL13:
 327:Core/Src/main.c ****   {
 384              		.loc 1 327 6 discriminator 1 view .LVU102
 385 0026 0028     		cmp	r0, #0
 386 0028 00D1     		bne	.L20
 335:Core/Src/main.c **** 
 387              		.loc 1 335 1 view .LVU103
 388              		@ sp needed
 389 002a 10BD     		pop	{r4, pc}
 390              	.L20:
 329:Core/Src/main.c ****   }
 391              		.loc 1 329 5 is_stmt 1 view .LVU104
 392 002c FFF7FEFF 		bl	Error_Handler
 393              	.LVL14:
 394              	.L22:
 395              		.align	2
 396              	.L21:
 397 0030 00000000 		.word	huart1
 398 0034 00380140 		.word	1073821696
 399              		.cfi_endproc
 400              	.LFE47:
 402              		.section	.text.MX_CRC_Init,"ax",%progbits
 403              		.align	1
 404              		.syntax unified
 405              		.code	16
 406              		.thumb_func
 408              	MX_CRC_Init:
 409              	.LFB44:
 207:Core/Src/main.c **** 
 410              		.loc 1 207 1 view -0
 411              		.cfi_startproc
 412              		@ args = 0, pretend = 0, frame = 0
 413              		@ frame_needed = 0, uses_anonymous_args = 0
 414 0000 10B5     		push	{r4, lr}
 415              		.cfi_def_cfa_offset 8
 416              		.cfi_offset 4, -8
 417              		.cfi_offset 14, -4
 216:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 418              		.loc 1 216 3 view .LVU106
 216:Core/Src/main.c ****   hcrc.Init.DefaultInitValueUse = DEFAULT_INIT_VALUE_ENABLE;
 419              		.loc 1 216 17 is_stmt 0 view .LVU107
 420 0002 0848     		ldr	r0, .L26
 421 0004 084B     		ldr	r3, .L26+4
 422 0006 0360     		str	r3, [r0]
 217:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 423              		.loc 1 217 3 is_stmt 1 view .LVU108
 217:Core/Src/main.c ****   hcrc.Init.InputDataInversionMode = CRC_INPUTDATA_INVERSION_NONE;
 424              		.loc 1 217 33 is_stmt 0 view .LVU109
 425 0008 0023     		movs	r3, #0
 426 000a 0371     		strb	r3, [r0, #4]
 218:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 427              		.loc 1 218 3 is_stmt 1 view .LVU110
 218:Core/Src/main.c ****   hcrc.Init.OutputDataInversionMode = CRC_OUTPUTDATA_INVERSION_DISABLE;
 428              		.loc 1 218 36 is_stmt 0 view .LVU111
 429 000c C360     		str	r3, [r0, #12]
ARM GAS  /tmp/ccNtVhtu.s 			page 19


 219:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 430              		.loc 1 219 3 is_stmt 1 view .LVU112
 219:Core/Src/main.c ****   hcrc.InputDataFormat = CRC_INPUTDATA_FORMAT_BYTES;
 431              		.loc 1 219 37 is_stmt 0 view .LVU113
 432 000e 0361     		str	r3, [r0, #16]
 220:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 433              		.loc 1 220 3 is_stmt 1 view .LVU114
 220:Core/Src/main.c ****   if (HAL_CRC_Init(&hcrc) != HAL_OK)
 434              		.loc 1 220 24 is_stmt 0 view .LVU115
 435 0010 0133     		adds	r3, r3, #1
 436 0012 8361     		str	r3, [r0, #24]
 221:Core/Src/main.c ****   {
 437              		.loc 1 221 3 is_stmt 1 view .LVU116
 221:Core/Src/main.c ****   {
 438              		.loc 1 221 7 is_stmt 0 view .LVU117
 439 0014 FFF7FEFF 		bl	HAL_CRC_Init
 440              	.LVL15:
 221:Core/Src/main.c ****   {
 441              		.loc 1 221 6 discriminator 1 view .LVU118
 442 0018 0028     		cmp	r0, #0
 443 001a 00D1     		bne	.L25
 229:Core/Src/main.c **** 
 444              		.loc 1 229 1 view .LVU119
 445              		@ sp needed
 446 001c 10BD     		pop	{r4, pc}
 447              	.L25:
 223:Core/Src/main.c ****   }
 448              		.loc 1 223 5 is_stmt 1 view .LVU120
 449 001e FFF7FEFF 		bl	Error_Handler
 450              	.LVL16:
 451              	.L27:
 452 0022 C046     		.align	2
 453              	.L26:
 454 0024 00000000 		.word	hcrc
 455 0028 00300240 		.word	1073885184
 456              		.cfi_endproc
 457              	.LFE44:
 459              		.section	.text.MX_TIM14_Init,"ax",%progbits
 460              		.align	1
 461              		.syntax unified
 462              		.code	16
 463              		.thumb_func
 465              	MX_TIM14_Init:
 466              	.LFB46:
 277:Core/Src/main.c **** 
 467              		.loc 1 277 1 view -0
 468              		.cfi_startproc
 469              		@ args = 0, pretend = 0, frame = 0
 470              		@ frame_needed = 0, uses_anonymous_args = 0
 471 0000 10B5     		push	{r4, lr}
 472              		.cfi_def_cfa_offset 8
 473              		.cfi_offset 4, -8
 474              		.cfi_offset 14, -4
 286:Core/Src/main.c ****   htim14.Init.Prescaler = 8-1;
 475              		.loc 1 286 3 view .LVU122
 286:Core/Src/main.c ****   htim14.Init.Prescaler = 8-1;
 476              		.loc 1 286 19 is_stmt 0 view .LVU123
ARM GAS  /tmp/ccNtVhtu.s 			page 20


 477 0002 0948     		ldr	r0, .L31
 478 0004 094B     		ldr	r3, .L31+4
 479 0006 0360     		str	r3, [r0]
 287:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 480              		.loc 1 287 3 is_stmt 1 view .LVU124
 287:Core/Src/main.c ****   htim14.Init.CounterMode = TIM_COUNTERMODE_UP;
 481              		.loc 1 287 25 is_stmt 0 view .LVU125
 482 0008 0723     		movs	r3, #7
 483 000a 4360     		str	r3, [r0, #4]
 288:Core/Src/main.c ****   htim14.Init.Period = 65535;
 484              		.loc 1 288 3 is_stmt 1 view .LVU126
 288:Core/Src/main.c ****   htim14.Init.Period = 65535;
 485              		.loc 1 288 27 is_stmt 0 view .LVU127
 486 000c 0023     		movs	r3, #0
 487 000e 8360     		str	r3, [r0, #8]
 289:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 488              		.loc 1 289 3 is_stmt 1 view .LVU128
 289:Core/Src/main.c ****   htim14.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 489              		.loc 1 289 22 is_stmt 0 view .LVU129
 490 0010 074A     		ldr	r2, .L31+8
 491 0012 C260     		str	r2, [r0, #12]
 290:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 492              		.loc 1 290 3 is_stmt 1 view .LVU130
 290:Core/Src/main.c ****   htim14.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 493              		.loc 1 290 29 is_stmt 0 view .LVU131
 494 0014 0361     		str	r3, [r0, #16]
 291:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 495              		.loc 1 291 3 is_stmt 1 view .LVU132
 291:Core/Src/main.c ****   if (HAL_TIM_Base_Init(&htim14) != HAL_OK)
 496              		.loc 1 291 33 is_stmt 0 view .LVU133
 497 0016 8361     		str	r3, [r0, #24]
 292:Core/Src/main.c ****   {
 498              		.loc 1 292 3 is_stmt 1 view .LVU134
 292:Core/Src/main.c ****   {
 499              		.loc 1 292 7 is_stmt 0 view .LVU135
 500 0018 FFF7FEFF 		bl	HAL_TIM_Base_Init
 501              	.LVL17:
 292:Core/Src/main.c ****   {
 502              		.loc 1 292 6 discriminator 1 view .LVU136
 503 001c 0028     		cmp	r0, #0
 504 001e 00D1     		bne	.L30
 300:Core/Src/main.c **** 
 505              		.loc 1 300 1 view .LVU137
 506              		@ sp needed
 507 0020 10BD     		pop	{r4, pc}
 508              	.L30:
 294:Core/Src/main.c ****   }
 509              		.loc 1 294 5 is_stmt 1 view .LVU138
 510 0022 FFF7FEFF 		bl	Error_Handler
 511              	.LVL18:
 512              	.L32:
 513 0026 C046     		.align	2
 514              	.L31:
 515 0028 00000000 		.word	htim14
 516 002c 00200040 		.word	1073750016
 517 0030 FFFF0000 		.word	65535
 518              		.cfi_endproc
ARM GAS  /tmp/ccNtVhtu.s 			page 21


 519              	.LFE46:
 521              		.section	.text.SystemClock_Config,"ax",%progbits
 522              		.align	1
 523              		.global	SystemClock_Config
 524              		.syntax unified
 525              		.code	16
 526              		.thumb_func
 528              	SystemClock_Config:
 529              	.LFB43:
 164:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 530              		.loc 1 164 1 view -0
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 80
 533              		@ frame_needed = 0, uses_anonymous_args = 0
 534 0000 00B5     		push	{lr}
 535              		.cfi_def_cfa_offset 4
 536              		.cfi_offset 14, -4
 537 0002 95B0     		sub	sp, sp, #84
 538              		.cfi_def_cfa_offset 88
 165:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 539              		.loc 1 165 3 view .LVU140
 165:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 540              		.loc 1 165 22 is_stmt 0 view .LVU141
 541 0004 3022     		movs	r2, #48
 542 0006 0021     		movs	r1, #0
 543 0008 08A8     		add	r0, sp, #32
 544 000a FFF7FEFF 		bl	memset
 545              	.LVL19:
 166:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 546              		.loc 1 166 3 is_stmt 1 view .LVU142
 166:Core/Src/main.c ****   RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 547              		.loc 1 166 22 is_stmt 0 view .LVU143
 548 000e 1022     		movs	r2, #16
 549 0010 0021     		movs	r1, #0
 550 0012 04A8     		add	r0, sp, #16
 551 0014 FFF7FEFF 		bl	memset
 552              	.LVL20:
 167:Core/Src/main.c **** 
 553              		.loc 1 167 3 is_stmt 1 view .LVU144
 167:Core/Src/main.c **** 
 554              		.loc 1 167 28 is_stmt 0 view .LVU145
 555 0018 1022     		movs	r2, #16
 556 001a 0021     		movs	r1, #0
 557 001c 6846     		mov	r0, sp
 558 001e FFF7FEFF 		bl	memset
 559              	.LVL21:
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 560              		.loc 1 172 3 is_stmt 1 view .LVU146
 172:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 561              		.loc 1 172 36 is_stmt 0 view .LVU147
 562 0022 0223     		movs	r3, #2
 563 0024 0893     		str	r3, [sp, #32]
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 564              		.loc 1 173 3 is_stmt 1 view .LVU148
 173:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 565              		.loc 1 173 30 is_stmt 0 view .LVU149
 566 0026 013B     		subs	r3, r3, #1
ARM GAS  /tmp/ccNtVhtu.s 			page 22


 567 0028 0B93     		str	r3, [sp, #44]
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 568              		.loc 1 174 3 is_stmt 1 view .LVU150
 174:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 569              		.loc 1 174 41 is_stmt 0 view .LVU151
 570 002a 0F33     		adds	r3, r3, #15
 571 002c 0C93     		str	r3, [sp, #48]
 175:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 572              		.loc 1 175 3 is_stmt 1 view .LVU152
 176:Core/Src/main.c ****   {
 573              		.loc 1 176 3 view .LVU153
 176:Core/Src/main.c ****   {
 574              		.loc 1 176 7 is_stmt 0 view .LVU154
 575 002e 08A8     		add	r0, sp, #32
 576 0030 FFF7FEFF 		bl	HAL_RCC_OscConfig
 577              	.LVL22:
 176:Core/Src/main.c ****   {
 578              		.loc 1 176 6 discriminator 1 view .LVU155
 579 0034 0028     		cmp	r0, #0
 580 0036 16D1     		bne	.L37
 183:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 581              		.loc 1 183 3 is_stmt 1 view .LVU156
 183:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 582              		.loc 1 183 31 is_stmt 0 view .LVU157
 583 0038 0723     		movs	r3, #7
 584 003a 0493     		str	r3, [sp, #16]
 185:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 585              		.loc 1 185 3 is_stmt 1 view .LVU158
 185:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 586              		.loc 1 185 34 is_stmt 0 view .LVU159
 587 003c 0023     		movs	r3, #0
 588 003e 0593     		str	r3, [sp, #20]
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 589              		.loc 1 186 3 is_stmt 1 view .LVU160
 186:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 590              		.loc 1 186 35 is_stmt 0 view .LVU161
 591 0040 0693     		str	r3, [sp, #24]
 187:Core/Src/main.c **** 
 592              		.loc 1 187 3 is_stmt 1 view .LVU162
 187:Core/Src/main.c **** 
 593              		.loc 1 187 36 is_stmt 0 view .LVU163
 594 0042 0793     		str	r3, [sp, #28]
 189:Core/Src/main.c ****   {
 595              		.loc 1 189 3 is_stmt 1 view .LVU164
 189:Core/Src/main.c ****   {
 596              		.loc 1 189 7 is_stmt 0 view .LVU165
 597 0044 0021     		movs	r1, #0
 598 0046 04A8     		add	r0, sp, #16
 599 0048 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 600              	.LVL23:
 189:Core/Src/main.c ****   {
 601              		.loc 1 189 6 discriminator 1 view .LVU166
 602 004c 0028     		cmp	r0, #0
 603 004e 0CD1     		bne	.L38
 193:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
 604              		.loc 1 193 3 is_stmt 1 view .LVU167
 193:Core/Src/main.c ****   PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK1;
ARM GAS  /tmp/ccNtVhtu.s 			page 23


 605              		.loc 1 193 38 is_stmt 0 view .LVU168
 606 0050 0123     		movs	r3, #1
 607 0052 0093     		str	r3, [sp]
 194:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 608              		.loc 1 194 3 is_stmt 1 view .LVU169
 194:Core/Src/main.c ****   if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 609              		.loc 1 194 38 is_stmt 0 view .LVU170
 610 0054 0023     		movs	r3, #0
 611 0056 0293     		str	r3, [sp, #8]
 195:Core/Src/main.c ****   {
 612              		.loc 1 195 3 is_stmt 1 view .LVU171
 195:Core/Src/main.c ****   {
 613              		.loc 1 195 7 is_stmt 0 view .LVU172
 614 0058 6846     		mov	r0, sp
 615 005a FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 616              	.LVL24:
 195:Core/Src/main.c ****   {
 617              		.loc 1 195 6 discriminator 1 view .LVU173
 618 005e 0028     		cmp	r0, #0
 619 0060 05D1     		bne	.L39
 199:Core/Src/main.c **** 
 620              		.loc 1 199 1 view .LVU174
 621 0062 15B0     		add	sp, sp, #84
 622              		@ sp needed
 623 0064 00BD     		pop	{pc}
 624              	.L37:
 178:Core/Src/main.c ****   }
 625              		.loc 1 178 5 is_stmt 1 view .LVU175
 626 0066 FFF7FEFF 		bl	Error_Handler
 627              	.LVL25:
 628              	.L38:
 191:Core/Src/main.c ****   }
 629              		.loc 1 191 5 view .LVU176
 630 006a FFF7FEFF 		bl	Error_Handler
 631              	.LVL26:
 632              	.L39:
 197:Core/Src/main.c ****   }
 633              		.loc 1 197 5 view .LVU177
 634 006e FFF7FEFF 		bl	Error_Handler
 635              	.LVL27:
 636              		.cfi_endproc
 637              	.LFE43:
 639              		.section	.rodata.main.str1.4,"aMS",%progbits,1
 640              		.align	2
 641              	.LC7:
 642 0000 48656C6C 		.ascii	"Hello World #\000"
 642      6F20576F 
 642      726C6420 
 642      2300
 643              		.section	.text.main,"ax",%progbits
 644              		.align	1
 645              		.global	main
 646              		.syntax unified
 647              		.code	16
 648              		.thumb_func
 650              	main:
 651              	.LFB42:
ARM GAS  /tmp/ccNtVhtu.s 			page 24


  96:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 652              		.loc 1 96 1 view -0
 653              		.cfi_startproc
 654              		@ args = 0, pretend = 0, frame = 80
 655              		@ frame_needed = 0, uses_anonymous_args = 0
 656 0000 30B5     		push	{r4, r5, lr}
 657              		.cfi_def_cfa_offset 12
 658              		.cfi_offset 4, -12
 659              		.cfi_offset 5, -8
 660              		.cfi_offset 14, -4
 661 0002 95B0     		sub	sp, sp, #84
 662              		.cfi_def_cfa_offset 96
 104:Core/Src/main.c **** 
 663              		.loc 1 104 3 view .LVU179
 664 0004 FFF7FEFF 		bl	HAL_Init
 665              	.LVL28:
 111:Core/Src/main.c **** 
 666              		.loc 1 111 3 view .LVU180
 667 0008 FFF7FEFF 		bl	SystemClock_Config
 668              	.LVL29:
 118:Core/Src/main.c ****   MX_SPI1_Init();
 669              		.loc 1 118 3 view .LVU181
 670 000c FFF7FEFF 		bl	MX_GPIO_Init
 671              	.LVL30:
 119:Core/Src/main.c ****   MX_USART1_UART_Init();
 672              		.loc 1 119 3 view .LVU182
 673 0010 FFF7FEFF 		bl	MX_SPI1_Init
 674              	.LVL31:
 120:Core/Src/main.c ****   MX_CRC_Init();
 675              		.loc 1 120 3 view .LVU183
 676 0014 FFF7FEFF 		bl	MX_USART1_UART_Init
 677              	.LVL32:
 121:Core/Src/main.c ****   MX_TIM14_Init();
 678              		.loc 1 121 3 view .LVU184
 679 0018 FFF7FEFF 		bl	MX_CRC_Init
 680              	.LVL33:
 122:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 681              		.loc 1 122 3 view .LVU185
 682 001c FFF7FEFF 		bl	MX_TIM14_Init
 683              	.LVL34:
 125:Core/Src/main.c **** 
 684              		.loc 1 125 3 view .LVU186
 685 0020 1D48     		ldr	r0, .L44
 686 0022 FFF7FEFF 		bl	HAL_TIM_Base_Start
 687              	.LVL35:
 127:Core/Src/main.c ****   if (!init(&hspi1)) Error_Handler();
 688              		.loc 1 127 3 view .LVU187
 128:Core/Src/main.c ****   if (!setFrequency(868.0f)) Error_Handler();
 689              		.loc 1 128 3 view .LVU188
 128:Core/Src/main.c ****   if (!setFrequency(868.0f)) Error_Handler();
 690              		.loc 1 128 8 is_stmt 0 view .LVU189
 691 0026 1D48     		ldr	r0, .L44+4
 692 0028 FFF7FEFF 		bl	init
 693              	.LVL36:
 128:Core/Src/main.c ****   if (!setFrequency(868.0f)) Error_Handler();
 694              		.loc 1 128 6 discriminator 1 view .LVU190
 695 002c 0028     		cmp	r0, #0
ARM GAS  /tmp/ccNtVhtu.s 			page 25


 696 002e 01D1     		bne	.L41
 128:Core/Src/main.c ****   if (!setFrequency(868.0f)) Error_Handler();
 697              		.loc 1 128 22 is_stmt 1 discriminator 1 view .LVU191
 698 0030 FFF7FEFF 		bl	Error_Handler
 699              	.LVL37:
 700              	.L41:
 129:Core/Src/main.c ****   setModemConfig(GFSK_Rb2_4Fd4_8);
 701              		.loc 1 129 3 view .LVU192
 129:Core/Src/main.c ****   setModemConfig(GFSK_Rb2_4Fd4_8);
 702              		.loc 1 129 8 is_stmt 0 view .LVU193
 703 0034 1A48     		ldr	r0, .L44+8
 704 0036 FFF7FEFF 		bl	setFrequency
 705              	.LVL38:
 129:Core/Src/main.c ****   setModemConfig(GFSK_Rb2_4Fd4_8);
 706              		.loc 1 129 6 discriminator 1 view .LVU194
 707 003a 0028     		cmp	r0, #0
 708 003c 01D1     		bne	.L42
 129:Core/Src/main.c ****   setModemConfig(GFSK_Rb2_4Fd4_8);
 709              		.loc 1 129 30 is_stmt 1 discriminator 1 view .LVU195
 710 003e FFF7FEFF 		bl	Error_Handler
 711              	.LVL39:
 712              	.L42:
 130:Core/Src/main.c ****   setPreambleLength(4);
 713              		.loc 1 130 3 view .LVU196
 714 0042 0B20     		movs	r0, #11
 715 0044 FFF7FEFF 		bl	setModemConfig
 716              	.LVL40:
 131:Core/Src/main.c **** 
 717              		.loc 1 131 3 view .LVU197
 718 0048 0420     		movs	r0, #4
 719 004a FFF7FEFF 		bl	setPreambleLength
 720              	.LVL41:
 127:Core/Src/main.c ****   if (!init(&hspi1)) Error_Handler();
 721              		.loc 1 127 7 is_stmt 0 view .LVU198
 722 004e 0024     		movs	r4, #0
 723              	.LVL42:
 724              	.L43:
 137:Core/Src/main.c ****   {
 725              		.loc 1 137 3 is_stmt 1 view .LVU199
 726              	.LBB8:
 142:Core/Src/main.c ****     //sprintf(radiopacket, "Hello World #%d", packetnum++);
 727              		.loc 1 142 5 view .LVU200
 142:Core/Src/main.c ****     //sprintf(radiopacket, "Hello World #%d", packetnum++);
 728              		.loc 1 142 10 is_stmt 0 view .LVU201
 729 0050 1449     		ldr	r1, .L44+12
 730 0052 0E22     		movs	r2, #14
 731 0054 04A8     		add	r0, sp, #16
 732 0056 FFF7FEFF 		bl	memcpy
 733              	.LVL43:
 734 005a 3222     		movs	r2, #50
 735 005c 0021     		movs	r1, #0
 736 005e 1E20     		movs	r0, #30
 737 0060 6844     		add	r0, r0, sp
 738 0062 FFF7FEFF 		bl	memset
 739              	.LVL44:
 144:Core/Src/main.c ****     itoa(packetnum++, packetnumstr, 10);
 740              		.loc 1 144 5 is_stmt 1 view .LVU202
ARM GAS  /tmp/ccNtVhtu.s 			page 26


 145:Core/Src/main.c ****     strcat(radiopacket, packetnumstr);
 741              		.loc 1 145 5 view .LVU203
 742 0066 651C     		adds	r5, r4, #1
 743              	.LVL45:
 145:Core/Src/main.c ****     strcat(radiopacket, packetnumstr);
 744              		.loc 1 145 5 is_stmt 0 view .LVU204
 745 0068 0A22     		movs	r2, #10
 746 006a 01A9     		add	r1, sp, #4
 747 006c 2000     		movs	r0, r4
 748 006e FFF7FEFF 		bl	itoa
 749              	.LVL46:
 146:Core/Src/main.c ****   
 750              		.loc 1 146 5 is_stmt 1 view .LVU205
 751 0072 01A9     		add	r1, sp, #4
 752 0074 04A8     		add	r0, sp, #16
 753 0076 FFF7FEFF 		bl	strcat
 754              	.LVL47:
 150:Core/Src/main.c **** 		waitPacketSent();
 755              		.loc 1 150 3 view .LVU206
 150:Core/Src/main.c **** 		waitPacketSent();
 756              		.loc 1 150 32 is_stmt 0 view .LVU207
 757 007a 04A8     		add	r0, sp, #16
 758 007c FFF7FEFF 		bl	strlen
 759              	.LVL48:
 150:Core/Src/main.c **** 		waitPacketSent();
 760              		.loc 1 150 3 discriminator 1 view .LVU208
 761 0080 C1B2     		uxtb	r1, r0
 762 0082 04A8     		add	r0, sp, #16
 763 0084 FFF7FEFF 		bl	send
 764              	.LVL49:
 151:Core/Src/main.c **** 
 765              		.loc 1 151 3 is_stmt 1 view .LVU209
 766 0088 FFF7FEFF 		bl	waitPacketSent
 767              	.LVL50:
 153:Core/Src/main.c **** 
 768              		.loc 1 153 5 view .LVU210
 769 008c FA20     		movs	r0, #250
 770 008e 8000     		lsls	r0, r0, #2
 771 0090 FFF7FEFF 		bl	HAL_Delay
 772              	.LVL51:
 773              	.LBE8:
 137:Core/Src/main.c ****   {
 774              		.loc 1 137 9 view .LVU211
 775              	.LBB9:
 145:Core/Src/main.c ****     strcat(radiopacket, packetnumstr);
 776              		.loc 1 145 5 is_stmt 0 view .LVU212
 777 0094 2C00     		movs	r4, r5
 778 0096 DBE7     		b	.L43
 779              	.L45:
 780              		.align	2
 781              	.L44:
 782 0098 00000000 		.word	htim14
 783 009c 00000000 		.word	hspi1
 784 00a0 00005944 		.word	1146683392
 785 00a4 00000000 		.word	.LC7
 786              	.LBE9:
 787              		.cfi_endproc
ARM GAS  /tmp/ccNtVhtu.s 			page 27


 788              	.LFE42:
 790              		.global	huart1
 791              		.section	.bss.huart1,"aw",%nobits
 792              		.align	2
 795              	huart1:
 796 0000 00000000 		.space	136
 796      00000000 
 796      00000000 
 796      00000000 
 796      00000000 
 797              		.global	htim14
 798              		.section	.bss.htim14,"aw",%nobits
 799              		.align	2
 802              	htim14:
 803 0000 00000000 		.space	72
 803      00000000 
 803      00000000 
 803      00000000 
 803      00000000 
 804              		.global	hspi1
 805              		.section	.bss.hspi1,"aw",%nobits
 806              		.align	2
 809              	hspi1:
 810 0000 00000000 		.space	100
 810      00000000 
 810      00000000 
 810      00000000 
 810      00000000 
 811              		.global	hcrc
 812              		.section	.bss.hcrc,"aw",%nobits
 813              		.align	2
 816              	hcrc:
 817 0000 00000000 		.space	28
 817      00000000 
 817      00000000 
 817      00000000 
 817      00000000 
 818              		.text
 819              	.Letext0:
 820              		.file 3 "/home/andruida/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 821              		.file 4 "/home/andruida/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 822              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f030x6.h"
 823              		.file 6 "/home/andruida/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm-
 824              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 825              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 826              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc_ex.h"
 827              		.file 10 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 828              		.file 11 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_dma.h"
 829              		.file 12 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_crc.h"
 830              		.file 13 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_spi.h"
 831              		.file 14 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_tim.h"
 832              		.file 15 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_uart.h"
 833              		.file 16 "Core/Inc/rf69.h"
 834              		.file 17 "/home/andruida/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm
 835              		.file 18 "/home/andruida/.config/Code/User/globalStorage/bmd.stm32-for-vscode/@xpack-dev-tools/arm
 836              		.file 19 "<built-in>"
 837              		.file 20 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
ARM GAS  /tmp/ccNtVhtu.s 			page 28


ARM GAS  /tmp/ccNtVhtu.s 			page 29


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
     /tmp/ccNtVhtu.s:19     .text.MX_GPIO_Init:00000000 $t
     /tmp/ccNtVhtu.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
     /tmp/ccNtVhtu.s:96     .text.MX_GPIO_Init:0000004c $d
     /tmp/ccNtVhtu.s:101    .text.delay_us:00000000 $t
     /tmp/ccNtVhtu.s:107    .text.delay_us:00000000 delay_us
     /tmp/ccNtVhtu.s:134    .text.delay_us:00000010 $d
     /tmp/ccNtVhtu.s:802    .bss.htim14:00000000 htim14
     /tmp/ccNtVhtu.s:139    .text.HAL_Delay:00000000 $t
     /tmp/ccNtVhtu.s:145    .text.HAL_Delay:00000000 HAL_Delay
     /tmp/ccNtVhtu.s:193    .text.Error_Handler:00000000 $t
     /tmp/ccNtVhtu.s:199    .text.Error_Handler:00000000 Error_Handler
     /tmp/ccNtVhtu.s:237    .text.MX_SPI1_Init:00000000 $t
     /tmp/ccNtVhtu.s:242    .text.MX_SPI1_Init:00000000 MX_SPI1_Init
     /tmp/ccNtVhtu.s:323    .text.MX_SPI1_Init:00000044 $d
     /tmp/ccNtVhtu.s:809    .bss.hspi1:00000000 hspi1
     /tmp/ccNtVhtu.s:329    .text.MX_USART1_UART_Init:00000000 $t
     /tmp/ccNtVhtu.s:334    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
     /tmp/ccNtVhtu.s:397    .text.MX_USART1_UART_Init:00000030 $d
     /tmp/ccNtVhtu.s:795    .bss.huart1:00000000 huart1
     /tmp/ccNtVhtu.s:403    .text.MX_CRC_Init:00000000 $t
     /tmp/ccNtVhtu.s:408    .text.MX_CRC_Init:00000000 MX_CRC_Init
     /tmp/ccNtVhtu.s:454    .text.MX_CRC_Init:00000024 $d
     /tmp/ccNtVhtu.s:816    .bss.hcrc:00000000 hcrc
     /tmp/ccNtVhtu.s:460    .text.MX_TIM14_Init:00000000 $t
     /tmp/ccNtVhtu.s:465    .text.MX_TIM14_Init:00000000 MX_TIM14_Init
     /tmp/ccNtVhtu.s:515    .text.MX_TIM14_Init:00000028 $d
     /tmp/ccNtVhtu.s:522    .text.SystemClock_Config:00000000 $t
     /tmp/ccNtVhtu.s:528    .text.SystemClock_Config:00000000 SystemClock_Config
     /tmp/ccNtVhtu.s:640    .rodata.main.str1.4:00000000 $d
     /tmp/ccNtVhtu.s:644    .text.main:00000000 $t
     /tmp/ccNtVhtu.s:650    .text.main:00000000 main
     /tmp/ccNtVhtu.s:782    .text.main:00000098 $d
     /tmp/ccNtVhtu.s:792    .bss.huart1:00000000 $d
     /tmp/ccNtVhtu.s:799    .bss.htim14:00000000 $d
     /tmp/ccNtVhtu.s:806    .bss.hspi1:00000000 $d
     /tmp/ccNtVhtu.s:813    .bss.hcrc:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
HAL_SPI_Init
HAL_HalfDuplex_Init
HAL_CRC_Init
HAL_TIM_Base_Init
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_Init
HAL_TIM_Base_Start
init
setFrequency
setModemConfig
setPreambleLength
memcpy
ARM GAS  /tmp/ccNtVhtu.s 			page 30


itoa
strcat
strlen
send
waitPacketSent
